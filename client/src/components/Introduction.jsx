import React from 'react';
import PropTypes from 'prop-types';
import Style from 'style-it';
import Modal from './Modal';
import Button from './Button';
import { PRIMARY_COLOR } from '../constants/uiColors';

const Introduction = ({ onToggleIntroductionUI }) => (
  <Modal>
    {
      Style.it(`
        .introduction {
          width: 100%;
          height: 100%;
          font-size: 13px;
          margin: 8px;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          max-width: 700px;
        }

        .header {
          font-size: 18px;
          margin: 8px;
          padding: 0px 16px;
          border-style: solid;
          border-width: 1px 0px;
          border-color: ${PRIMARY_COLOR};
        }

        .paragraph {
          margin: 0px 0px 8px 0px;
        }

        .textBox {
          margin: 8px;
          overflow-y: auto;
        }

        .list {
          padding: 0px 30px;
        }

        .footer {
        }
      `, (
        <div className='introduction'>
          <div className='header'>{'Matrix Traverser'}</div>
          <div className='textBox'>
            <div className='paragraph'>
              {'The Matrix Traverser is a web app that solves an algorithmic problem.  A random rectangular matrix of cells with numbers between 0 and 9 is generated.  The problem is solved by calculating the LONGEST path through the matrix that meets the following conditions:'}
            </div>
            <div className='paragraph'>
              <ul className='list'>
                <li>{'The path cannot move to a cell in the matrix that it has already passed through.'}</li>
                <li>{'The path can only move to a cell of equal or greater value than the previous cell in the path.'}</li>
              </ul>
            </div>
            <div className='paragraph'>
              {'It is possible to have multiple valid solutions.'}
            </div>
            <div className='paragraph'>
              {'A new matrix can be generated by clicking on the '+' button at the bottom of the app.  To change the value of a cell, click on it and enter a number between 0 and 9.  Once a cell has been changed, a new solution (or set of solutions) will be calculated.'}
            </div>
          </div>
          <div className='footer'>
            <Button onClick={() => onToggleIntroductionUI()}>OK</Button>
          </div>
        </div>
      ))
    }
  </Modal>
);

Introduction.propTypes = {
  onToggleIntroductionUI: PropTypes.func.isRequired,
};

export default Introduction;
